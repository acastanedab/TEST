CREATE   PROCEDURE [MNT].[USP_CONFIGURACION_KEY_ENDPOINT_SEL]
(
	@CODIGO_UNIDAD_NEGOCIO INT,
	@CODIGO CHAR(3),
	@NOMBRE_COMPONENTE VARCHAR(100)
)
AS
/****************************************************************************
Nombre SP: [MNT].[USP_CONFIGURACION_KEY_ENDPOINT_SEL]
Propósito: Obtener el listado de Parámetro Valor Configuraciones
Input:
		@CODIGO_UNIDAD_NEGOCIO:	Parámetro de entrada de tipo int, que representa el código de unidad de negocio.
		@CODIGO: Parámetro de entrada de tipo char, que representa el código.
		@NOMBRE_COMPONENTE: Nombre del Componente.
Output: 

AUDITORÍA
01/03/2023	DDURAND	UNI-10690 Parametrizar los valores de archivo de configuración: Rutas, Endpoints, Llaves - FASE 3 (MSF)
EXEC [MNT].[USP_CONFIGURACION_KEY_ENDPOINT_SEL] 4, 'APC', 'appSFT'
****************************************************************************/
BEGIN
	DECLARE
	@ESTADO_REGISTRO_ACTIVO CHAR(1) = '1',
	@CODIGO_REPORT CHAR(3) = 'APC',
	@CODIGO_SECCION_REPORT INT = 3,
	@CODIGO_VALOR_REPORT INT = 4, 
	@SRVREPORTINGPASSWORD NVARCHAR(255) = NULL;

	SELECT DISTINCT
	PVAL.CODIGO_VALOR
	INTO #TEMPORAL_VALOR_COMPONENTE
	FROM MNT.PARAMETRO PAR WITH(NOLOCK)
	INNER JOIN MNT.PARAMETRO_VALOR PVAL WITH(NOLOCK) ON PAR.CODIGO_PARAMETRO = PVAL.CODIGO_PARAMETRO
	WHERE PAR.ESTADO_REGISTRO = @ESTADO_REGISTRO_ACTIVO
	AND PVAL.ESTADO_REGISTRO = @ESTADO_REGISTRO_ACTIVO
	AND PAR.CODIGO_UNIDAD_NEGOCIO = @CODIGO_UNIDAD_NEGOCIO
	AND PVAL.CODIGO_UNIDAD_NEGOCIO = @CODIGO_UNIDAD_NEGOCIO	
	AND CHARINDEX(@NOMBRE_COMPONENTE, PVAL.VALOR) > 0
	AND PVAL.CODIGO_SECCION = 2
	AND PAR.CODIGO = @CODIGO

	SELECT  PV.CODIGO_UNIDAD_NEGOCIO,
			PV.CODIGO_PARAMETRO,
			PA.CODIGO,
			PV.CODIGO_SECCION,
			PV.CODIGO_VALOR,
			PA.NOMBRE AS NOMBRE_PARAMETRO,
			PS.NOMBRE AS NOMBRE_SECCION,			
			PV.VALOR,
			PV.ESTADO_REGISTRO
	INTO #TEMPORAL_PARAMETRO
	FROM MNT.PARAMETRO_VALOR PV WITH(NOLOCK)
	INNER JOIN MNT.PARAMETRO PA	WITH(NOLOCK) ON PA.CODIGO_PARAMETRO = PV.CODIGO_PARAMETRO AND PA.ESTADO_REGISTRO = @ESTADO_REGISTRO_ACTIVO
	INNER JOIN MNT.PARAMETRO_SECCION PS WITH(NOLOCK) ON PS.CODIGO_PARAMETRO = PV.CODIGO_PARAMETRO AND PS.ESTADO_REGISTRO	= @ESTADO_REGISTRO_ACTIVO	
	INNER JOIN #TEMPORAL_VALOR_COMPONENTE TVC ON PV.CODIGO_VALOR =  TVC.CODIGO_VALOR
	WHERE (PV.CODIGO_SECCION = PS.CODIGO_SECCION)
	AND (PV.CODIGO_UNIDAD_NEGOCIO = @CODIGO_UNIDAD_NEGOCIO)
	AND	(@CODIGO IS NULL OR PA.CODIGO = @CODIGO)
	AND (PV.ESTADO_REGISTRO = @ESTADO_REGISTRO_ACTIVO)
	
	SELECT
	@SRVREPORTINGPASSWORD = VALOR 
	FROM #TEMPORAL_PARAMETRO
	WHERE CODIGO = @CODIGO_REPORT
	AND CODIGO_VALOR = @CODIGO_VALOR_REPORT
	AND CODIGO_SECCION = @CODIGO_SECCION_REPORT
		
	IF (@SRVREPORTINGPASSWORD IS NOT NULL)
	BEGIN
		SET @SRVREPORTINGPASSWORD = CAST(DECRYPTBYPASSPHRASE(N'WUFOQkFM', CONVERT(VARBINARY(MAX),@SRVREPORTINGPASSWORD,1)) AS NVARCHAR(MAX)) 
 
		UPDATE TEMP	SET
			TEMP.VALOR = @SRVREPORTINGPASSWORD
		FROM #TEMPORAL_PARAMETRO TEMP
		WHERE CODIGO_VALOR = @CODIGO_VALOR_REPORT
		AND CODIGO_SECCION = @CODIGO_SECCION_REPORT
		AND CODIGO_UNIDAD_NEGOCIO = @CODIGO_UNIDAD_NEGOCIO
		AND CODIGO = @CODIGO_REPORT
	END

	SELECT
	TMP.CODIGO_UNIDAD_NEGOCIO		AS CodigoUnidadNegocio,  
	TMP.CODIGO_PARAMETRO			AS CodigoParametro,  
	TMP.CODIGO						AS Codigo,  
	TMP.CODIGO_SECCION				AS CodigoSeccion,  
	TMP.CODIGO_VALOR				AS CodigoValor,  
	TMP.NOMBRE_PARAMETRO			AS NombreParametro,  
	TMP.NOMBRE_SECCION				AS NombreSeccion, 
	TMP.VALOR						AS Valor,  
	TMP.ESTADO_REGISTRO				AS EstadoRegistro
	FROM #TEMPORAL_PARAMETRO TMP
	ORDER BY TMP.CODIGO_VALOR ASC, TMP.CODIGO_SECCION ASC
END