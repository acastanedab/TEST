CREATE   PROCEDURE [CONF].[USP_SISTEMA_COMPONENTE_VERSION_INS]
(
	@LISTA_SISTEMA_VERSION		[CONF].[LISTA_SISTEMA_VERSION] READONLY,
	@LISTA_COMPONENTE_VERSION	[CONF].[LISTA_COMPONENTE_VERSION] READONLY,
	@USUARIO 					VARCHAR(100),
	@TERMINAL					VARCHAR(10)
)
AS
BEGIN
/**************************************************************
Nombre SP: [CONF].[USP_SISTEMA_COMPONENTE_VERSION_INS]
Propósito: Insertar Sistema-Componente Versión.
Input:
	@LISTA_SISTEMA_VERSION:	Lista Versionamiento Sistema Versión.
	@LISTA_COMPONENTE_VERSION:	Lista Versionamiento Componente Versión.
	@USUARIO: Usuario
	@TERMINAL: Terminal
AUDITORÍA
29/01/2023	DDURAND	UNI-9103 Mejora/Rediseño en el registro de Versionamiento de las aplicaciones de los pases.
***************************************************************/
DECLARE @ESTADO_REGISTRO_ACTIVO	CHAR(1) = '1',
		@CODIGO_SISTEMA_VERSION BIGINT = 0,
		@FECHA DATETIME = GETDATE();

BEGIN TRAN UPDATEVERSION
MERGE CONF.SISTEMA_VERSION AS TARGET
USING
(
SELECT
B.CODIGO_SISTEMA,
A.NOMBRE_VERSION,
A.CODIGO_PASE
FROM @LISTA_SISTEMA_VERSION A
INNER JOIN CONF.SISTEMA B WITH(NOLOCK) ON A.NOMBRE_SISTEMA = B.NOMBRE_SISTEMA
WHERE B.ESTADO_REGISTRO = @ESTADO_REGISTRO_ACTIVO
)
AS SOURCE 
ON (TARGET.CODIGO_SISTEMA = SOURCE.CODIGO_SISTEMA AND TARGET.NOMBRE_VERSION = SOURCE.NOMBRE_VERSION)
WHEN MATCHED
	THEN UPDATE SET 
	TARGET.NOMBRE_VERSION = SOURCE.NOMBRE_VERSION,
	TARGET.CODIGO_PASE = SOURCE.CODIGO_PASE,
	TARGET.ESTADO_REGISTRO = @ESTADO_REGISTRO_ACTIVO,
	TARGET.USUARIO_MODIFICACION = @USUARIO,
	TARGET.FECHA_MODIFICACION = @FECHA,
	TARGET.TERMINAL_MODIFICACION = @TERMINAL
WHEN NOT MATCHED BY TARGET 
	THEN INSERT (
		CODIGO_SISTEMA,
		NOMBRE_VERSION,
		CODIGO_PASE,
		ESTADO_REGISTRO,
		USUARIO_CREACION,
		FECHA_CREACION,
		TERMINAL_CREACION
	) 
	VALUES
	(
		SOURCE.CODIGO_SISTEMA,
		SOURCE.NOMBRE_VERSION,
		SOURCE.CODIGO_PASE,
		@ESTADO_REGISTRO_ACTIVO,
		@USUARIO,
		@FECHA,
		@TERMINAL
	);

SELECT TOP(1) @CODIGO_SISTEMA_VERSION = STV.CODIGO_SISTEMA_VERSION
FROM @LISTA_SISTEMA_VERSION LSTV
INNER JOIN CONF.SISTEMA ST ON ST.NOMBRE_SISTEMA = LSTV.NOMBRE_SISTEMA
INNER JOIN CONF.SISTEMA_VERSION STV ON ST.CODIGO_SISTEMA = ST.CODIGO_SISTEMA 
AND LSTV.NOMBRE_VERSION = STV.NOMBRE_VERSION
AND LSTV.CODIGO_PASE = STV.CODIGO_PASE
ORDER BY CODIGO_SISTEMA_VERSION DESC

MERGE CONF.COMPONENTE_VERSION AS TARGET
USING
(
	SELECT
	B.CODIGO_COMPONENTE,
	A.CODIGO_REQUERIMIENTO,
	A.NOMBRE_TAGS,
	A.REPOSITORIO,
	A.CANTIDAD_ITERACIONES
	FROM @LISTA_COMPONENTE_VERSION A
	INNER JOIN CONF.COMPONENTE B ON A.NOMBRE_COMPONENTE = B.NOMBRE_COMPONENTE
	WHERE B.ESTADO_REGISTRO = @ESTADO_REGISTRO_ACTIVO
)
AS SOURCE 
ON (TARGET.CODIGO_COMPONENTE = SOURCE.CODIGO_COMPONENTE AND TARGET.NOMBRE_TAGS = SOURCE.NOMBRE_TAGS)
WHEN MATCHED
	THEN UPDATE SET 
	TARGET.CODIGO_REQUERIMIENTO = SOURCE.CODIGO_REQUERIMIENTO,
	TARGET.NOMBRE_TAGS = SOURCE.NOMBRE_TAGS,
	TARGET.REPOSITORIO = SOURCE.REPOSITORIO,
	TARGET.CANTIDAD_ITERACIONES = SOURCE.CANTIDAD_ITERACIONES,
	TARGET.ESTADO_REGISTRO = @ESTADO_REGISTRO_ACTIVO,
	TARGET.USUARIO_MODIFICACION = @USUARIO,
	TARGET.FECHA_MODIFICACION = @FECHA,
	TARGET.TERMINAL_MODIFICACION = @TERMINAL
WHEN NOT MATCHED BY TARGET 
	THEN INSERT (
		CODIGO_SISTEMA_VERSION,
		CODIGO_COMPONENTE,
		CODIGO_REQUERIMIENTO,
		NOMBRE_TAGS,
		REPOSITORIO,
		CANTIDAD_ITERACIONES,
		ESTADO_REGISTRO,
		USUARIO_CREACION,
		FECHA_CREACION,
		TERMINAL_CREACION
	) 
	VALUES
	(
		@CODIGO_SISTEMA_VERSION,
		SOURCE.CODIGO_COMPONENTE,
		SOURCE.CODIGO_REQUERIMIENTO,
		SOURCE.NOMBRE_TAGS,
		SOURCE.REPOSITORIO,
		SOURCE.CANTIDAD_ITERACIONES,
		@ESTADO_REGISTRO_ACTIVO,
		@USUARIO,
		@FECHA,
		@TERMINAL
	);

COMMIT TRAN UPDATEVERSION

END